package com.nalexand.swingy.ui.gui.forms;

import com.nalexand.swingy.controller.WelcomeController;
import com.nalexand.swingy.model.Hero;
import com.nalexand.swingy.model.ModelFacade;
import com.nalexand.swingy.ui.gui.Form;
import com.nalexand.swingy.utils.IconResolver;
import com.nalexand.swingy.utils.Utils;

import javax.swing.*;
import java.awt.*;
import java.util.List;

public class WelcomeForm implements Form {
    private JButton createHeroButton;
    private JPanel root;
    private JPanel content;
    private JLabel title;
    private JLabel welcomeIllustration;
    private JLabel continueTitle;

    public WelcomeForm(ModelFacade model, WelcomeController controller) {
        $$$setupUI$$$();
        List<Hero> createdHeroes = model.getCreatedHeroes();
        createHeroButton.addActionListener(e -> controller.showCreateHero());
        int buttonYPosition = content.getComponentCount() + 1;
        continueTitle.setVisible(!createdHeroes.isEmpty());
        for (Hero hero : createdHeroes) {
            addSelectHeroButton(hero, buttonYPosition++, controller);
        }
        String[] gifSources = {
                "/traxex.gif",
                "/nevermore.gif",
                "/ursa.gif",
                "/void.gif"
        };
        String gifSource = gifSources[Utils.randomBetween(0, gifSources.length - 1)];
        IconResolver.setGifIcon(welcomeIllustration, gifSource);
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        root = new JPanel();
        root.setLayout(new GridBagLayout());
        content = new JPanel();
        content.setLayout(new GridBagLayout());
        content.setAlignmentX(0.5f);
        content.setAlignmentY(0.5f);
        content.setAutoscrolls(false);
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.ipadx = 32;
        gbc.ipady = 32;
        root.add(content, gbc);
        content.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        createHeroButton = new JButton();
        Font createHeroButtonFont = this.$$$getFont$$$("Phosphate", -1, 22, createHeroButton.getFont());
        if (createHeroButtonFont != null) createHeroButton.setFont(createHeroButtonFont);
        createHeroButton.setHorizontalAlignment(0);
        createHeroButton.setHorizontalTextPosition(0);
        createHeroButton.setText("Create hero");
        createHeroButton.setVerticalAlignment(0);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 32, 16, 32);
        content.add(createHeroButton, gbc);
        title = new JLabel();
        Font titleFont = this.$$$getFont$$$("Phosphate", -1, 36, title.getFont());
        if (titleFont != null) title.setFont(titleFont);
        title.setText("Swingy!");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.insets = new Insets(0, 0, 32, 0);
        content.add(title, gbc);
        welcomeIllustration = new JLabel();
        welcomeIllustration.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.insets = new Insets(0, 0, 32, 0);
        content.add(welcomeIllustration, gbc);
        continueTitle = new JLabel();
        continueTitle.setHorizontalAlignment(0);
        continueTitle.setText("Continue:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        content.add(continueTitle, gbc);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return root;
    }

    @Override
    public JComponent getRootComponent() {
        return $$$getRootComponent$$$();
    }

    private void addSelectHeroButton(Hero hero, int buttonYPosition, WelcomeController controller) {
        JButton newButton = new JButton(hero.name);
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = buttonYPosition;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 32, 0, 32);
        newButton.addActionListener(e -> controller.selectHeroAndShowGameProcess(hero));
        content.add(newButton, gbc);
    }
}
